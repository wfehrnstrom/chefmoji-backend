worker_processes 4;
pid /var/run/nginx.pid;

events {
  worker_connections 4096;
}

http {
  types {
    text/html html;
    image/gif gif;
    image/jpeg jpg;
    text/css css;
    text/javascript js;
  }

  server {
    listen 80 default;
    listen [::]:80 default;
    server_name chefmoji.wtf;

    # Discourage deep links by using a permanent redirect to home page of HTTPS site
    # return 301 https://$host;

    # Alternatively, redirect all HTTP links to the matching HTTPS page
    return 301 https://$server_name$request_uri;
  }

  server {
    listen 443 ssl http2;
    server_name chefmoji.wtf;
    ssl_certificate /etc/letsencrypt/live/chefmoji.wtf/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/chefmoji.wtf/privkey.pem;
    root /var/www/chefmoji;
    access_log /app/access.log;
    error_log /app/error.log;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    location = / {
      index index.html;
    }

    location / {
        try_files $uri $uri/ $uri.html @uwsgi =404;
    }

    location @uwsgi {
        include uwsgi_params;
        uwsgi_ssl_protocols TLSv1.3;
        uwsgi_ssl_certificate /etc/letsencrypt/live/chefmoji.wtf/fullchain.pem;
        uwsgi_ssl_certificate_key /etc/letsencrypt/live/chefmoji.wtf/privkey.pem;
        uwsgi_pass unix:///tmp/chefmoji.sock;
    }

    # location /socket.io {
    #     include uwsgi_params;
    #     uwsgi_ssl_protocols TLSv1.3;
    #     uwsgi_ssl_certificate /etc/letsencrypt/live/chefmoji.wtf/fullchain.pem;
    #     uwsgi_ssl_certificate_key /etc/letsencrypt/live/chefmoji.wtf/privkey.pem;
    #     uwsgi_pass unix:///tmp/chefmoji.sock;
    # }
  }
}
